
let baseUrl = 'http://192.168.3.206:8080/';



// 1. root窗口，监听keyback 提示退出应用;
const rootToEixt = () => {
    // a. 设置可以退出时间段 
    var ableToOut = null;
    api.addEventListener({
        name: 'keyback'
    }, function(ret, err){
        if(!ableToOut) {
            ableToOut  = { timeout:3000 };
            return api.toast({
                msg: api.appName+' 3s内再次点击退出应用',
                duration: 2000,
                location: 'bottom'
            });
        } else {
            setTimeout(() => {
                ableToOut = null;
            }, ableToOut.timeout);
            api.closeWidget({
               slient:true
            });
        }
    });
}
// 2. 封装ajax为async 函数
const myAjax =  (url,data) => {
    const promise = new Promise((resolve,reject) => {
        api.ajax({
            url:baseUrl+ url,
            method:'post',
            timeout:'30',
            dataType:'json',
            returnAll:false,
            data,
        },function(ret,err){
            if (ret) {
                // TODO 
                console.log(JSON.stringify(ret));
                resolve({ success:ret } ) ;
            } else {
                reject({ failure:err });
            };
        });

    })
   return promise;
}

// 3. 封装官方的偏好，方法 设置偏好
const _setPrefs = (key,value) =>{
    api.setPrefs({
        key,
        value,
    });
}

// 4. 封装官方同步获取偏好方法，

const _syncPrefs = (key) => {
  let a =  api.getPrefs({
        key,
        sync:true,
    });
    a = a === '' ? undefined : JSON.parse(a);
    return a;
}


// 4. 判断用户是否登录 
const LoginOrNot = ()=> {
    //同步返回结果：

    let sl_uInfo = _syncPrefs('sl_uInfo') || {} ;
    console.log(JSON.stringify(sl_uInfo));
    
    let bool = sl_uInfo.sl_uname ? true : false;
    return bool;
}
